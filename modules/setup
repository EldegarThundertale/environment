#!/usr/bin/env bash

function help {
    echo "usage: $(basename $0) [options] <mode> <component>"
    echo ""
    echo "  Setup components in the current environment."
    echo ""
    echo "Options:"
    echo "  -h, --help                      show usages and exit"
    echo "      --debug                     set debug mode on"
    echo "  -a, --all                       make the action for all components"
    echo ""
    echo "Modes"
    echo "  update                          update components from environment"
    echo "  install                         install components from environment"
    echo "  purge                           uninstall components from environment"
    echo "Components:"
    for component in $(getComponents $FILE_DIR)
    do
        echo "  $component"
    done
    exit 1
}

if [ -L ${BASH_SOURCE[0]} ]
then
	FILE_DIR="$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" && pwd )"
else
	FILE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
fi

if ! [[ $LIB_DIR ]]
then
    export LIB_DIR=$FILE_DIR/../lib
fi

source $LIB_DIR/functions

CMD=""
ARGS=""
i=1
while((i <= $#))
do
    case ${!i} in
        -h | --help)
            if ! [[ $CMD ]]
            then
                help
            else
                addArgs "${!i}"
            fi
            ;;
        --debug)
            if ! [[ $CMD ]]
            then
                DEBUG=1
            else
                addArgs "${!i}"
            fi
            ;;
        -a | --all)
            ALL=1
            ;;
        update | install | purge)
            MODE=${!i}
            ;;
        *)
            if ! [[ $CMD ]]
            then
                CMD="${!i}"
            else
                addArgs "${!i}"
            fi
            ;;
    esac

    i=$(expr ${i} + 1)
done

if ! [[ $MODE ]]
then
    echo "Missing mode! Abort."
    exit 6
fi

if [[ $CMD ]]
then
    if [[ -e "$FILE_DIR/$CMD/$MODE" ]]
    then
        $FILE_DIR/$CMD/$MODE $ARGS
    else
        abort "Not supported $MODE mode for $CMD component!" 6
    fi
    exit $?
fi

if [[ $ALL ]]
then
    for component in $(getComponents $FILE_DIR)
    do
        $0 $component $MODE $ARGS
    done
    exit $?
fi

help